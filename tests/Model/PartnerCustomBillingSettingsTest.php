<?php

/**
 * PartnerCustomBillingSettingsTest
 *
 * PHP version 8.1
 *
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Billingo API v3
 *
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.14
 * Contact: hello@billingo.hu
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.15.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Cone\Billingo\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PartnerCustomBillingSettingsTest Class Doc Comment
 *
 * @description PartnerCustomBillingSettings
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PartnerCustomBillingSettingsTest extends TestCase
{
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PartnerCustomBillingSettings"
     */
    public function testPartnerCustomBillingSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paymentMethod"
     */
    public function testPropertyPaymentMethod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "documentForm"
     */
    public function testPropertyDocumentForm()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dueDays"
     */
    public function testPropertyDueDays()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "documentCurrency"
     */
    public function testPropertyDocumentCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "templateLanguageCode"
     */
    public function testPropertyTemplateLanguageCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "discount"
     */
    public function testPropertyDiscount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
